

security:
  jwt:
    prefix: Bearer
    http-header-name: Authorization

  oauth2:
    client:
      client-id: acme
      client-secret: acmesecret
      access-token-uri: http://localhost:8080/oauth/token
      user-authorization-uri: http://localhost:8080/oauth/authorize
      scope: read,write
      auto-approve-scopes: '.*'
    resource:
      user-info-uri: http://localhost:8080/me

github:
  client:
    clientId: Iv1.acbf7009a5610786
    clientSecret: 90186ec1737e015cfe7ad3ca4fb58a69a5b272ba
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://api.github.com/user

webmarks:
  client:
    clientId: client_id
    clientSecret: client_secret
    accessTokenUri: https://oauth2.webmarks.net/login/oauth2/token/
    userAuthorizationUri: https://oauth2.webmarks.net/login/oauth2/authorize
    clientAuthenticationScheme: form
    scope:
          - profile
          - bookmarks
  resource:
    userInfoUri: https://oauth2.webmarks.net/api/v1/accounts/me/

logging:
      # file: logs/application-debug.logger
      level:
        root: WARN
        org.springframework.web: ERROR
        org.springframework.security: ERROR
        org.hibernate: ERROR
        org.hibernate.SQL: DEBUG
        org.hibernate.type.descriptor.sql: DEBUG
        com.emu.apps: WARN

server:
  address: 127.0.0.1
  port: 8080

---
spring:
    profiles: development
    jpa:
        database-platform: org.hibernate.dialect.DerbyDialect
        generate-ddl: false
        show-sql: true
        hibernate:
            ddl-auto: create-drop
            properties:
               hibernate:
                  dialect: org.hibernate.dialect.DerbyDialect
        properties:
              format_sql: true


